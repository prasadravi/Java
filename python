import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

# Sample data for user ratings on products (users x products)
user_ratings = np.array([
    [5, 3, 0, 0],
    [4, 0, 0, 5],
    [0, 0, 4, 4],
    [0, 2, 5, 0],
    [5, 0, 0, 5]
])

# Function to calculate similarity between users
def calculate_similarity(ratings_matrix):
    # Calculate cosine similarity between users
    return cosine_similarity(ratings_matrix)

# Function to recommend products
def recommend_products(user_id, ratings_matrix, similarity_matrix, num_recommendations=2):
    # Get user similarity
    user_similarity = similarity_matrix[user_id]
    
    # Exclude the current user's rating for unbiased recommendations
    rated_products = ratings_matrix[user_id] > 0
    scores = np.dot(user_similarity, ratings_matrix) / np.sum(user_similarity)
    
    # Filter out already purchased/rated products
    recommendations = np.argsort(scores)[::-1]
    recommendations = [prod for prod in recommendations if not rated_products[prod]]
    
    return recommendations[:num_recommendations]

# Compute similarity matrix and recommend for a specific user
similarity_matrix = calculate_similarity(user_ratings)
recommendations = recommend_products(0, user_ratings, similarity_matrix)
print("Recommended products:", recommendations)
